[{"path":"https://r-tmap.github.io/tmap.networks/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martijn Tennekes. Author, maintainer. Andrea Gilardi. Author. Robin Lovelace. Contributor.","code":""},{"path":"https://r-tmap.github.io/tmap.networks/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tennekes M, Gilardi (2025). tmap.networks: Visualization networks 'sfnetworks' using 'tmap'. R package version 0.1, https://github.com/r-tmap/tmap.networks.","code":"@Manual{,   title = {tmap.networks: Visualization of networks from 'sfnetworks' using 'tmap'},   author = {Martijn Tennekes and Andrea Gilardi},   year = {2025},   note = {R package version 0.1},   url = {https://github.com/r-tmap/tmap.networks}, }"},{"path":"https://r-tmap.github.io/tmap.networks/index.html","id":"tmapnetworks-network-layers-in-tmap-","dir":"","previous_headings":"","what":"Visualization of networks from sfnetworks using tmap","title":"Visualization of networks from sfnetworks using tmap","text":"tmap R package visualizing spatial data. package extension. features native support sfnetwork objects (package sfnetworks), features network specific layer functions","code":""},{"path":"https://r-tmap.github.io/tmap.networks/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualization of networks from sfnetworks using tmap","text":"package development development version tmap tmap.networks required.","code":""},{"path":"https://r-tmap.github.io/tmap.networks/index.html","id":"tmap","dir":"","previous_headings":"Installation","what":"tmap","title":"Visualization of networks from sfnetworks using tmap","text":"Linux macOS users new working spatial data R, may fail since additional (non-R) libraries required (automatically installed Windows users).","code":"# install.packages(\"remotes\") remotes::install_github(\"r-tmap/tmap\")  # install.packages(\"pak\") pak::pak(\"r-tmap/tmap\")  # Or from r-universe install.packages(\"tmap\", repos = c(\"https://r-tmap.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":"https://r-tmap.github.io/tmap.networks/index.html","id":"tmapnetworks","dir":"","previous_headings":"Installation","what":"tmap.networks","title":"Visualization of networks from sfnetworks using tmap","text":"","code":"# install.packages(\"remotes\") remotes::install_github(\"r-tmap/tmap.networks\")  # install.packages(\"pak\") pak::pak(\"r-tmap/tmap.networks\")  # Or from r-universe install.packages(\"tmap.networks\", repos = c(\"https://r-tmap.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: edges of a (sf)network — tm_edges","title":"Map layer: edges of a (sf)network — tm_edges","text":"Map layer draws edges (sf)network.","code":""},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: edges of a (sf)network — tm_edges","text":"","code":"tm_edges(   col = tmap::tm_const(),   col.scale = tmap::tm_scale(),   col.legend = tmap::tm_legend(),   col.free = NA,   lwd = tmap::tm_const(),   lwd.scale = tmap::tm_scale(),   lwd.legend = tmap::tm_legend(),   lwd.free = NA,   lty = tmap::tm_const(),   lty.scale = tmap::tm_scale(),   lty.legend = tmap::tm_legend(),   lty.free = NA,   col_alpha = tmap::tm_const(),   col_alpha.scale = tmap::tm_scale(),   col_alpha.legend = tmap::tm_legend(),   col_alpha.free = NA,   linejoin = \"round\",   lineend = \"round\",   plot.order = tmap::tm_plot_order(\"lwd\", reverse = TRUE, na.order = \"bottom\"),   zindex = NA,   group = NA,   group.control = \"check\",   popup.vars = NA,   popup.format = list(),   hover = NA,   id = \"\",   options = opt_tm_edges() )  opt_tm_edges(lines.only = \"ifany\")"},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: edges of a (sf)network — tm_edges","text":"col, col.scale, col.legend, col.free Visual variable determines col color. See details. lwd, lwd.scale, lwd.legend, lwd.free Visual variable determines line width. See details. lty, lty.scale, lty.legend, lty.free Visual variable determines line type. See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.free Visual variable determines border color alpha transparency. See details. linejoin, lineend line join line end. See gpar details. plot.order Specification order spatial features drawn. See `tmap::tm_plot_order` details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see `group.control`) group.control view mode, group control determines layer groups can switched . Options: `\"radio\"` radio buttons (meaning one group can shown), `\"check\"` check boxes (multiple groups can shown), `\"none\"` control (group (de)selected). popup.vars names data variables shown popups `\"view\"` mode. Set popup.vars `TRUE` show variables shape object. Set popup.vars `FALSE` disable popups. Set `popup.vars` character vector variable names variables popups. default (`NA`) depends whether visual variables (e.g.`fill`) used. , shown. variables shape object shown. popup.format list formatting options popup values. See argument `legend.format` options. applicable numeric data variables. one list formatting options provided, applied numeric variables `popup.vars`. Also, (named) list lists can provided. case, list formatting options applied named variable. hover name data variable specifies hover labels (view mode ). Set `FALSE` disable hover labels. default `FALSE`, unless `id` specified. case, set `id`, id name data variable specifies indices spatial features. used `\"view\"` mode. options options passed corresponding `opt_<layer_function>` function lines.line geometries shape object (defined [tmap::tm_shape()]) plotted, also geometry types (like polygons)? default `\"ifany\"`, means `TRUE` case geometry collection specified.","code":""},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_edges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: edges of a (sf)network — tm_edges","text":"","code":"library(tmap) library(sfnetworks)  load_all(\"../tmap\") #> Error in load_all(\"../tmap\"): could not find function \"load_all\" load_all() #> Error in load_all(): could not find function \"load_all\"  sfn = as_sfnetwork(roxel)  tm_shape(sfn) +   tm_network()     tm_shape(sfn) +   tm_edges(col = \"type\", lwd = 4) +   tm_nodes()"},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: (sf)network — tm_network","title":"Map layer: (sf)network — tm_network","text":"Map layer draws network. (total) flexibility, please use tm_edges tm_nodes.","code":""},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: (sf)network — tm_network","text":"","code":"tm_network()"},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: (sf)network — tm_network","text":"","code":"library(tmap) library(sfnetworks)  load_all(\"../tmap\") #> Error in load_all(\"../tmap\"): could not find function \"load_all\" load_all() #> Error in load_all(): could not find function \"load_all\"  sfn = as_sfnetwork(roxel)  tm_shape(sfn) +   tm_network()     tm_shape(sfn) +   tm_edges(col = \"type\", lwd = 4) +   tm_nodes()"},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_nodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Map layer: nodes of a (sf)network — tm_nodes","title":"Map layer: nodes of a (sf)network — tm_nodes","text":"Map layer draws nodes (sf)network.","code":""},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_nodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map layer: nodes of a (sf)network — tm_nodes","text":"","code":"tm_nodes(   size = tm_const(),   size.scale = tm_scale(),   size.legend = tm_legend(),   size.free = NA,   fill = tm_const(),   fill.scale = tm_scale(),   fill.legend = tm_legend(),   fill.free = NA,   col = tm_const(),   col.scale = tm_scale(),   col.legend = tm_legend(),   col.free = NA,   shape = tm_const(),   shape.scale = tm_scale(),   shape.legend = tm_legend(),   shape.free = NA,   lwd = tm_const(),   lwd.scale = tm_scale(),   lwd.legend = tm_legend(),   lwd.free = NA,   lty = tm_const(),   lty.scale = tm_scale(),   lty.legend = tm_legend(),   lty.free = NA,   fill_alpha = tm_const(),   fill_alpha.scale = tm_scale(),   fill_alpha.legend = tm_legend(),   fill_alpha.free = NA,   col_alpha = tm_const(),   col_alpha.scale = tm_scale(),   col_alpha.legend = tm_legend(),   col_alpha.free = NA,   plot.order = tm_plot_order(\"size\"),   zindex = NA,   group = NA,   group.control = \"check\",   popup.vars = NA,   popup.format = list(),   hover = NA,   id = \"\",   options = opt_tm_nodes() )  opt_tm_nodes(   points_only = \"ifany\",   point_per = \"feature\",   on_surface = FALSE,   icon.scale = 3,   just = NA,   grob.dim = c(width = 48, height = 48, render.width = 256, render.height = 256) )"},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_nodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map layer: nodes of a (sf)network — tm_nodes","text":"size, size.scale, size.legend, size.free Visual variable determines size. See details. fill, fill.scale, fill.legend, fill.free Visual variable determines fill color. See details. col, col.scale, col.legend, col.free Visual variable determines col color. See details. shape, shape.scale, shape.legend, shape.free Visual variable determines shape. See details. lwd, lwd.scale, lwd.legend, lwd.free Visual variable determines line width. See details. lty, lty.scale, lty.legend, lty.free Visual variable determines line type. See details. fill_alpha, fill_alpha.scale, fill_alpha.legend, fill_alpha.free Visual variable determines fill color alpha transparency See details. col_alpha, col_alpha.scale, col_alpha.legend, col_alpha.free Visual variable determines border color alpha transparency. See details. plot.order Specification order spatial features drawn. See `tmap::tm_plot_order` details. zindex Map layers drawn top . zindex numbers (one map layer) determines stacking order. default map layers drawn order called. group Name group layer belongs. relevant view mode, layer groups can switched (see `group.control`) group.control view mode, group control determines layer groups can switched . Options: `\"radio\"` radio buttons (meaning one group can shown), `\"check\"` check boxes (multiple groups can shown), `\"none\"` control (group (de)selected). popup.vars names data variables shown popups `\"view\"` mode. Set popup.vars `TRUE` show variables shape object. Set popup.vars `FALSE` disable popups. Set `popup.vars` character vector variable names variables popups. default (`NA`) depends whether visual variables (e.g.`fill`) used. , shown. variables shape object shown. popup.format list formatting options popup values. See argument `legend.format` options. applicable numeric data variables. one list formatting options provided, applied numeric variables `popup.vars`. Also, (named) list lists can provided. case, list formatting options applied named variable. hover name data variable specifies hover labels (view mode ). Set `FALSE` disable hover labels. default `FALSE`, unless `id` specified. case, set `id`, id name data variable specifies indices spatial features. used `\"view\"` mode. options options passed corresponding `opt_<layer_function>` function points_only point geometries shape object (defined [tmap::tm_shape()]) plotted? default `\"ifany\"`, means `TRUE` case geometry collection specified. point_per specification spatial points mapped geometry multi line multi polygon. One \"feature\", \"segment\" \"largest\". first generates spatial point every feature, second every segment (.e. subfeature), third largest segment (subfeature). Note last two options can significant slower. on_surface case polygons, centroids computed. points surface? `TRUE`, slower default `FALSE`, centroids outside surface replaced points computed [sf::st_point_on_surface()]. icon.scale scaling number determines large icons (grobs) plot mode comparison proportional symbols (bubbles). view mode, use argument `grob.dim` just used (yet) grob.dim vector four values determine grob objects (see details) shown view mode. first second value width height displayed icon. third fourth value width height rendered png image used icon. Generally, third fourth value large enough render ggplot2 graphic successfully. needed view mode.","code":""},{"path":"https://r-tmap.github.io/tmap.networks/reference/tm_nodes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map layer: nodes of a (sf)network — tm_nodes","text":"","code":"library(tmap) library(sfnetworks)  load_all(\"../tmap\") #> Error in load_all(\"../tmap\"): could not find function \"load_all\" load_all() #> Error in load_all(): could not find function \"load_all\"  sfn = as_sfnetwork(roxel)  tm_shape(sfn) +   tm_network()     tm_shape(sfn) +   tm_edges(col = \"type\", lwd = 4) +   tm_nodes()"},{"path":"https://r-tmap.github.io/tmap.networks/reference/tmap.networks-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Extension for tmap: networks — tmap.networks-package","title":"Extension for tmap: networks — tmap.networks-package","text":"Networks sfnetworks supported several network specifc layer functions added","code":""},{"path":[]},{"path":"https://r-tmap.github.io/tmap.networks/reference/tmap.networks-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extension for tmap: networks — tmap.networks-package","text":"Martijn Tennekes mtennekes@gmail.com","code":""},{"path":"https://r-tmap.github.io/tmap.networks/reference/tmapGetShapeMeta1.sfnetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Implementation of tmapGetShapeMeta1 for sfnetwork — tmapGetShapeMeta1.sfnetwork","title":"Implementation of tmapGetShapeMeta1 for sfnetwork — tmapGetShapeMeta1.sfnetwork","text":"Implementation tmapGetShapeMeta1 sfnetwork","code":""},{"path":"https://r-tmap.github.io/tmap.networks/reference/tmapGetShapeMeta1.sfnetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implementation of tmapGetShapeMeta1 for sfnetwork — tmapGetShapeMeta1.sfnetwork","text":"","code":"# S3 method for class 'sfnetwork' tmapGetShapeMeta1(shp, o)"},{"path":"https://r-tmap.github.io/tmap.networks/reference/tmapGetShapeMeta2.sfnetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Implementation of tmapGetShapeMeta2 for sfnetwork — tmapGetShapeMeta2.sfnetwork","title":"Implementation of tmapGetShapeMeta2 for sfnetwork — tmapGetShapeMeta2.sfnetwork","text":"Implementation tmapGetShapeMeta2 sfnetwork","code":""},{"path":"https://r-tmap.github.io/tmap.networks/reference/tmapGetShapeMeta2.sfnetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implementation of tmapGetShapeMeta2 for sfnetwork — tmapGetShapeMeta2.sfnetwork","text":"","code":"# S3 method for class 'sfnetwork' tmapGetShapeMeta2(shp, smeta, o)"},{"path":"https://r-tmap.github.io/tmap.networks/reference/tmapShape.sfnetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Implementation of tmapShape for sfnetwork — tmapShape.sfnetwork","title":"Implementation of tmapShape for sfnetwork — tmapShape.sfnetwork","text":"Implementation tmapShape sfnetwork","code":""},{"path":"https://r-tmap.github.io/tmap.networks/reference/tmapShape.sfnetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implementation of tmapShape for sfnetwork — tmapShape.sfnetwork","text":"","code":"# S3 method for class 'sfnetwork' tmapShape(shp, is.main, crs, bbox, unit, filter, shp_name, smeta, o, tmf)"},{"path":"https://r-tmap.github.io/tmap.networks/reference/tmapSubsetShp.sfnetwork.html","id":null,"dir":"Reference","previous_headings":"","what":"Implementation of tmapSubsetShp for sfnetwork — tmapSubsetShp.sfnetwork","title":"Implementation of tmapSubsetShp for sfnetwork — tmapSubsetShp.sfnetwork","text":"Implementation tmapSubsetShp sfnetwork","code":""},{"path":"https://r-tmap.github.io/tmap.networks/reference/tmapSubsetShp.sfnetwork.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implementation of tmapSubsetShp for sfnetwork — tmapSubsetShp.sfnetwork","text":"","code":"# S3 method for class 'sfnetwork' tmapSubsetShp(shp, vars)"}]
